error_log  /var/log/nginx/error.log notice;

events {
    worker_connections 1024; ## Default: 1024
}

http {

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=default_cache:10m max_size=2g;

    upstream backend
    {
        server host.docker.internal:8081 weight=2;
        server host.docker.internal:8082 weight=1;
        server host.docker.internal:8083 weight=1;
    }

    upstream main_backend
    {
        server host.docker.internal:8081;
    }

    upstream mirror_backend
    {
        server host.docker.internal:8084;
    }

    map $request_method $upstream_location
    {
        GET backend;
        # default main_backend;
    }

    more_clear_headers Server;
    more_set_headers 'Server: ABC';
    # add_header Server "MyApplicationName" always;

    server {
        listen 80;
        listen [::]:80;
        
        server_tokens off;
        add_header X-Server "$server_name";
        
        gzip on;
        gzip_comp_level 5;
        gzip_disable "msie6";
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        proxy_cache default_cache;
        proxy_cache_methods GET;
        proxy_cache_min_uses 2;
        proxy_cache_valid 15m;
        
        location /api/v1/ {
            proxy_no_cache 1;
            proxy_pass http://$upstream_location;  
        }

        location = /api/v1/ {
            # return http://host.docker.internal:8081/swagger/;\
            return http://localhost:8081/swagger/;
            # proxy_pass 'http://main_backend/swagger/';

        }

        location /status {
            stub_status;
        }

        location /admin {
            return http://localhost:5050/;
        }

        location /documentation {
            alias /static/;
            try_files $uri /readme.html;
        }

        location /documentation/README.md {
            root /static/;
            index README.md;
            charset UTF-8;
            add_header content-type "text/markdown; charset=utf-8";
        }

        location /documentation/img/ {
            root /static/;
        }

        location / {
            root /static;
            index index.html;
        }

        location /test {
            root /static/;
            try_files $uri /index.html;
        }

        location = /mirror1/api/v1/ {
            return http://host.docker.internal:8084/swagger/;
        }
   
        location /mirror1/api/v1/ {
            proxy_pass http://mirror_backend/swagger/;
        }
    }
}

# error_log  /var/log/nginx/error.log notice;
# events {
#     worker_connections 1024; ## Default: 1024
# }

# http {
#     proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=default_cache:10m max_size=2g;

#     upstream app_read{
#         server host.docker.internal:8081 weight=2;
#         server host.docker.internal:8082 weight=1;
#         server host.docker.internal:8083 weight=1;
#     }

#     upstream app_write {
#         server host.docker.internal:8081;
#     }   

#     map $request_method $upstream_location {
#         GET app_read;
#         default app_write;
#     }

#     upstream app_mirror {
#         server host.docker.internal:8084;
#     }

#     map $request_method $app_mirror {
#         default app_mirror;
#     }

#     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                         '$status $body_bytes_sent "$http_referer" '
#                         '"$http_user_agent" "$http_x_forwarded_for" '
#                         '"$upstream_addr"';

#     access_log  /var/log/nginx/access.log  main;
#     # more_clear_headers Server;
#     # more_set_headers 'Server: WebAPI';
#     server {
#         listen 80;
#         listen [::]:80;
#         gzip on;
#         gzip_comp_level 5;
#         gzip_disable "msie6";
#         gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

#         proxy_cache default_cache;
#         proxy_cache_methods GET;
#         proxy_cache_min_uses 2;
#         proxy_cache_valid any 10m;

#         location ~ ^/api/v1/([^.]*)$ {  
#             proxy_no_cache 1;
#             if ($request_method = GET) {
#                 proxy_pass 'http://app_read/api/v1/$1$is_args$args';
#             }

#             proxy_pass 'http://app_write/api/v1/$1$is_args$args';
#         }
        
#         location = /api/v1/ {
#             return http://app_write/swagger/;
#         }

#         location /swagger/ {
#             proxy_pass http://app_write/swagger/;
#         }

#         location /api/ {
#              proxy_pass http://$upstream_location;
#              add_header X-Proxy-Cache $upstream_cache_status;

#             # proxy_pass http://app_write/api/;
#         }

#         location /api/v1/ {
#             proxy_pass http://app_write/api/;
#         }

#         location /status {
#             stub_status;
#         }

#         location /admin {
#             return 301 'http://$host:5050/';
#         }

#         location /documentation {
#             alias /static/;
#             try_files $uri /readme.html;
#         }

#         location /documentation/README.md {
#             root /static/;
#             index README.md;
#             charset UTF-8;
#             add_header content-type "text/markdown; charset=utf-8";
#         }

#         location /documentation/img/ {
#             root /static/;
#         }

#         location / {
#             root /static;
#             index index.html;
#         }

#         location /test {
#             root /static/;
#             try_files $uri /index.html;
#         }

#     }
# }